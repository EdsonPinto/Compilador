
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftORleftANDrightNOTleftEQNEleftLTLEGTGEleftPLUSMINUSleftTIMESDIVIDErightUMINUSAND DIVIDE ELSE EQ EQUAL GE GT ID IF LBRACE LE LPAREN LT MINUS NE NOT NUMBER OR PLUS RBRACE RPAREN TIMES WHILEprogram : statementsstatements : statements statementstatements : statementstatement : ID EQUAL expressionstatement : expressionstatement : IF LPAREN expression RPAREN block\n                 | IF LPAREN expression RPAREN block ELSE blockstatement : WHILE LPAREN expression RPAREN blockblock : LBRACE statements RBRACEexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression LT expression\n                  | expression LE expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression EQ expression\n                  | expression NE expressionexpression : expression AND expression\n                  | expression OR expressionexpression : NOT expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : ID'
    
_lr_action_items = {'ID':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,50,51,52,54,55,56,],[4,4,-3,-26,-5,28,28,28,-25,-2,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-26,28,-23,-22,-4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-6,4,-8,4,-7,-9,]),'IF':([0,2,3,4,5,11,12,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,50,51,52,54,55,56,],[6,6,-3,-26,-5,-25,-2,-26,-23,-22,-4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-6,6,-8,6,-7,-9,]),'WHILE':([0,2,3,4,5,11,12,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,50,51,52,54,55,56,],[8,8,-3,-26,-5,-25,-2,-26,-23,-22,-4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-6,8,-8,8,-7,-9,]),'NOT':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,50,51,52,54,55,56,],[10,10,-3,-26,-5,10,10,10,-25,-2,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-26,10,-23,-22,-4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-6,10,-8,10,-7,-9,]),'MINUS':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,54,55,56,],[9,9,-3,-26,15,9,9,9,-25,-2,9,9,9,9,9,9,9,9,9,9,9,9,9,9,15,-26,9,-23,15,15,-10,-11,-12,-13,15,15,15,15,15,15,15,15,15,-24,15,-6,9,-8,9,-7,-9,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,50,51,52,54,55,56,],[7,7,-3,-26,-5,26,7,29,7,7,-25,-2,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-26,7,-23,-22,-4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-6,7,-8,7,-7,-9,]),'NUMBER':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,50,51,52,54,55,56,],[11,11,-3,-26,-5,11,11,11,-25,-2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-26,11,-23,-22,-4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-6,11,-8,11,-7,-9,]),'$end':([1,2,3,4,5,11,12,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,50,52,55,56,],[0,-1,-3,-26,-5,-25,-2,-26,-23,-22,-4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-6,-8,-7,-9,]),'RBRACE':([3,4,5,11,12,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,50,52,54,55,56,],[-3,-26,-5,-25,-2,-26,-23,-22,-4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-6,-8,56,-7,-9,]),'EQUAL':([4,],[13,]),'PLUS':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,14,-25,14,-26,-23,14,14,-10,-11,-12,-13,14,14,14,14,14,14,14,14,14,-24,14,]),'TIMES':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,16,-25,16,-26,-23,16,16,16,16,-12,-13,16,16,16,16,16,16,16,16,16,-24,16,]),'DIVIDE':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,17,-25,17,-26,-23,17,17,17,17,-12,-13,17,17,17,17,17,17,17,17,17,-24,17,]),'LT':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,18,-25,18,-26,-23,18,18,-10,-11,-12,-13,-14,-15,-16,-17,18,18,18,18,18,-24,18,]),'LE':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,19,-25,19,-26,-23,19,19,-10,-11,-12,-13,-14,-15,-16,-17,19,19,19,19,19,-24,19,]),'GT':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,20,-25,20,-26,-23,20,20,-10,-11,-12,-13,-14,-15,-16,-17,20,20,20,20,20,-24,20,]),'GE':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,21,-25,21,-26,-23,21,21,-10,-11,-12,-13,-14,-15,-16,-17,21,21,21,21,21,-24,21,]),'EQ':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,22,-25,22,-26,-23,22,22,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,22,22,22,-24,22,]),'NE':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,23,-25,23,-26,-23,23,23,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,23,23,23,-24,23,]),'AND':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,24,-25,24,-26,-23,-22,24,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,24,24,-24,24,]),'OR':([4,5,11,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-26,25,-25,25,-26,-23,-22,25,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,25,-24,25,]),'RPAREN':([11,27,28,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-25,46,-26,-23,-22,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,48,-24,49,]),'LBRACE':([48,49,53,],[51,51,51,]),'ELSE':([50,56,],[53,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,51,],[2,54,]),'statement':([0,2,51,54,],[3,12,3,12,]),'expression':([0,2,7,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,51,54,],[5,5,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,5,5,]),'block':([48,49,53,],[50,52,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','gramatica.py',113),
  ('statements -> statements statement','statements',2,'p_statements_recursive','gramatica.py',118),
  ('statements -> statement','statements',1,'p_statements_single','gramatica.py',122),
  ('statement -> ID EQUAL expression','statement',3,'p_statement_assign','gramatica.py',127),
  ('statement -> expression','statement',1,'p_statement_expression','gramatica.py',145),
  ('statement -> IF LPAREN expression RPAREN block','statement',5,'p_statement_if','gramatica.py',150),
  ('statement -> IF LPAREN expression RPAREN block ELSE block','statement',7,'p_statement_if','gramatica.py',151),
  ('statement -> WHILE LPAREN expression RPAREN block','statement',5,'p_statement_while','gramatica.py',166),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','gramatica.py',178),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','gramatica.py',183),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','gramatica.py',184),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','gramatica.py',185),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','gramatica.py',186),
  ('expression -> expression LT expression','expression',3,'p_expression_comparison','gramatica.py',199),
  ('expression -> expression LE expression','expression',3,'p_expression_comparison','gramatica.py',200),
  ('expression -> expression GT expression','expression',3,'p_expression_comparison','gramatica.py',201),
  ('expression -> expression GE expression','expression',3,'p_expression_comparison','gramatica.py',202),
  ('expression -> expression EQ expression','expression',3,'p_expression_comparison','gramatica.py',203),
  ('expression -> expression NE expression','expression',3,'p_expression_comparison','gramatica.py',204),
  ('expression -> expression AND expression','expression',3,'p_expression_logical','gramatica.py',217),
  ('expression -> expression OR expression','expression',3,'p_expression_logical','gramatica.py',218),
  ('expression -> NOT expression','expression',2,'p_expression_not','gramatica.py',231),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','gramatica.py',241),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','gramatica.py',245),
  ('expression -> NUMBER','expression',1,'p_expression_number','gramatica.py',249),
  ('expression -> ID','expression',1,'p_expression_id','gramatica.py',253),
]
